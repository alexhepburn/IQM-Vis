# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package to PyPi

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get Version of latest code
      run: echo "code_version=$(cat VERSION)" >> $GITHUB_ENV
    - name: Get Version of PyPi Project latest release
      run: echo "pypi_version=$(./scripts/get_latest_package_version.py)" >> $GITHUB_ENV

    - name: Set up Python
      if: env.code_version != env.pypi_version
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: Install base python deps
      if: env.code_version != env.pypi_version
      run: |
        python -m pip install --upgrade pip
        pip install packaging

    - name: Build package
      if: env.code_version != env.pypi_version
      run: |
        pip install build
        python -m build

    - name: Publish package
      if: env.code_version != env.pypi_version
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
